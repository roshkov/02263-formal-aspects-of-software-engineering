NET

scheme NETTest =
extend NET with 
class
  value	
	/* StopId values */
	s1 : StopId = "A",
	s2 : StopId = "B",
	s3 : StopId = "C",
	s4 : StopId = "D",
	s5 : StopId = "E",
	s6 : StopId = "F",
	s7 : StopId = "G",
	s8 : StopId = "H",
	s9 : StopId = "I",
	s10 : StopId = "J",
	s11 : StopId = "K",

	/* Connection values */

	/* Net values */
	emptyNet : Net = empty,
	netTwoStops : insertStop(s2, 3, insertStop(s1, 2, emptyNet)),
	netStops : Net = insertStop(s4, 2, insertStop(s3, 2, insertStop(s2, 3, insertStop(s1, 2, emptyNet)))),
	net : Net = addConnection(s2, s4, 2, 2, 7, addConnection(s2, s3, 2, 3, 12, addConnection(s1, s2, 1, 1, 10, netStops)))
	
  test_case
	/** ---- Tests for insertStop ----  **/

	/* Test that a stop is inserted correctly in a net. */
	[t101] insertStop(s1, 2, emptyNet),

	/* That that a stop that is already in a net is overwritten when inserted again. */
	[t102] insertStop(s1, 2, insertStop(s1, 20, emptyNet)),

	/** ---- Tests for addConnection ----  **/

	/* Test that a connection   */

	/** ---- Tests for isIn ----  **/

	/* Test that true is returned for a Stop that exists in the Net  */
	[t301] isIn(s1, net) = true,

	/* Test that false is returned for a Stop that does not exists in the Net  */
	[t302] isIn(s5, net) = false,

	/** ---- Tests for capacity (Stop) ----  **/

	/* Test that the correct capacity of a stop is returned. */
	[t401] capacity(s2, net) = 3,

	/* Test that a result can not be returned for a stop that does not exists in the net. */
	[t402] capacity(s5, net) = chaos
	
	/** ---- Tests for getConnection ----  **/

	/* Test that a connection between two stops that is in the net is returned.  */
	[t501] getConnection(s1, s2, net)

	/* Test that a connection between two stops that is in the net is returned.  */
	[t502] getConnection(s5, s4, net)
	
	/** ---- Tests for areDirectlyConnected ----  **/

	/* Test that true is returned for two stops that are directly connected. */
	--[t601],
	
	/* Test that false is returned for two stops that are not directly connected. */
	--[t602],
	
	/* Test that <> is returned for two stops, where one is in the net and the other is not. */	
	--[t603],
	
	/* Test that <> is returned for two stops, where both are not in the net. */
	--[t604],

	/** ---- Tests for minHeadway ----  **/

	/*   */
	
	/** ---- Tests for capacity (connection) ----  **/

	/*   */
	
	/** ---- Tests for minDrivingTime ----  **/

	/*   */
	
	/** ---- Tests for isWellformed ----  **/

	/*   */

 end
 
